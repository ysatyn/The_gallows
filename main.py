import asyncio
import json
import os
from dotenv import load_dotenv
import random
import sqlite3
import string
import logging

from telebot.async_telebot import AsyncTeleBot
from telebot.types import BotCommand, InlineKeyboardMarkup, InlineKeyboardButton
from wordfreq import word_frequency

logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(name)s - %(levelname)s - %(message)s')
logger = logging.getLogger(__name__)
logger.info("–õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ")

try:
    load_dotenv()
    token = os.getenv("BOT_TOKEN")
    bot = AsyncTeleBot(token)
    logger.info("–¢–æ–∫–µ–Ω –±–æ—Ç–∞ —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–∫–ª—é—á—ë–Ω")
except Exception as e:
    logger.critical(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏ –∫ Telegram-–±–æ—Ç—É: {e}")
    raise e

conn = sqlite3.connect("hanged_men.db", check_same_thread=False)
c = conn.cursor()

c.execute(  # –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã —Å–æ —Å–ª–æ–≤–∞–º–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    f"""CREATE TABLE IF NOT EXISTS user_words (
    user_id INTEGER PRIMARY KEY,  
    current_word TEXT,
    current_step INTEGER DEFAULT 0,
    guessed_letters TEXT DEFAULT "",
    wrong_letters TEXT DEFAULT "",
    attempts INTEGER DEFAULT 0
    )"""
)
c.execute(f"""CREATE TABLE IF NOT EXISTS unique_words (
word TEXT PRIMARY KEY UNIQUE ,
link TEXT)""")


def is_real(word, min_freq=0.000000000000000001): # –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Ä–µ–∞–ª—å–Ω–æ—Å—Ç—å —Å–ª–æ–≤–∞
    return word_frequency(word.lower(), 'ru') > min_freq

RUSSIAN_LETTERS = set("–∞–±–≤–≥–¥–µ—ë–∂–∑–∏–π–∫–ª–º–Ω–æ–ø—Ä—Å—Ç—É—Ñ—Ö—Ü—á—à—â—ä—ã—å—ç—é—è")  # –≤—Å–µ —Ä—É—Å—Å–∫–∏–µ –±—É–∫–≤—ã
stages = [ # —Å—Ç–∞–¥–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø–æ–≤–µ—à–µ–Ω–Ω–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞
    """
      ---------
      |      |
      |     ‚ò†Ô∏è
      |     /|\\
      |      /\\
     ___

    """,
    """
      ---------
      |      |
      |     üò≠
      |     /|\\
      |      /
     ___

    """,
    """
      ---------
      |      |
      |     ‚òπÔ∏è
      |     /|\\
      |      
     ___

    """,
    """
      ---------
      |      |
      |     üòû
      |      |
      |      
     ___

    """,
    """
      ---------
      |      |
      |     ü§®
      |     
      |      
     ___

    """,
    """
      ---------
      |      |
      |     
      |     
      |      
     ___

    """,
    """
      
      |      
      |     
      |     
      |      
     ___

    """,
    """
    
    """
]

def create_link(link):
    """
    –°–æ–∑–¥–∞—ë—Ç —Å—Å—ã–ª–∫—É –¥–ª—è –Ω–∞—á–∞–ª–∞ –∏–≥—Ä—ã —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–º —Å–ª–æ–≤–æ–º
    :param link: –ó–∞–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ —Å–ª–æ–≤–æ
    :return: –°—Å—ã–ª–∫–∞
    """
    for_return = f"https://t.me/hang_yourself_bot?start={link}"
    return for_return


@bot.message_handler(commands=["start"])
async def start(message):
    """
    –ü—Ä–æ—Å—Ç–æ–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
    :param message: –°–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞–ø–∏—Å–∞–Ω–Ω–æ–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
    """

    user_id = message.from_user.id
    command_parts = message.text.split(" ")
    if len(command_parts) > 1:  # –ø—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ —Å—Å—ã–ª–∫–∞ –Ω–∞ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω–æ–µ —Å–ª–æ–≤–æ
        link_code = command_parts[1]  # –ø–æ–ª—É—á–∞–µ–º —Å—Å—ã–ª–∫—É

        c.execute(f"SELECT word FROM unique_words WHERE link = ?", (link_code,))  # –¥–æ—Å—Ç–∞—ë–º –∑–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω–Ω–æ–µ —Å–ª–æ–≤–æ
        result = c.fetchone()
        if result is not None:  # –µ—Å–ª–∏ —Å—Å—ã–ª–∫–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞ –∏ —Å–ª–æ–≤–æ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
            word = result[0]

            c.execute(f"SELECT user_id FROM user_words WHERE user_id = ?", (user_id,))
            user_exists = c.fetchone()
            if user_exists is not None:  # –µ—Å–ª–∏ —é–∑–µ—Ä —É–∂–µ —É–≥–∞–¥—ã–≤–∞–µ—Ç —Å–ª–æ–≤–æ

                c.execute(f"""DELETE * FRON user_words WHERE user_id = {user_id}"""
                )  #  —É–¥–∞–ª—è–µ–º —Ç–µ–∫—É—â–µ–µ —Å–ª–æ–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

            c.execute(
                f"""INSERT INTO user_words (user_id, current_word) VALUES (?, ?)""",
                (user_id, word),
            )  # –ø—Ä–∏—Å–≤–∞–∏–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –Ω–æ–≤–æ–µ —Å–ª–æ–≤–æ
            conn.commit()
            empty_symbols = ""
            for _ in range(len(word)):  # —Å–æ–∑–¥–∞–Ω–∏–µ –ø—É—Å—Ç–æ–≥–æ —Å–ª–æ–≤–∞
                empty_symbols += "_ "
            await bot.send_message(message.chat.id,
                                   f"–í—ã –Ω–∞—á–∞–ª–∏ –∏–≥—Ä—É –ø–æ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–µ. –í–∞—à–µ —Å–ª–æ–≤–æ —Å–æ—Å—Ç–æ–∏—Ç –∏–∑ {len(word)} –±—É–∫–≤. –£–¥–∞—á–∏!"
                                   f"\n{empty_symbols}")
        else:  # –µ—Å–ª–∏ —Å—Å—ã–ª–∫–∞ –Ω–µ–≤–µ—Ä–Ω–∞
            await bot.send_message(message.chat.id, "–ù–µ–≤–µ—Ä–Ω–∞—è —Å—Å—ã–ª–∫–∞!")
    else:  # –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤–∏–ª –∫–æ–º–∞–Ω–¥—É /start

        preview_path = os.path.join(os.path.dirname(__file__), "photos", "preview.jpg")  # —Å–æ–∑–¥–∞—ë–º —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –ø—É—Ç—å –¥–æ —Ñ–∞–π–ª–∞
        with open(preview_path, "rb") as file:
            preview = file.read()  # –∑–∞–≥—Ä—É–∂–∞–µ–º —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏—è
        text = "–ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ –±–æ—Ç –ø–æ –ø—Ä–æ—Å—Ç–æ–π –∏–≥—Ä–µ '–í–∏—Å–µ–ª–∏—Ü–∞'. \n–î–ª—è –Ω–∞—á–∞–ª–∞ –∏–≥—Ä—ã –ø—Ä–æ—Å—Ç–æ –Ω–∞–∂–º–∏ –∫–æ–º–∞–Ω–¥—É /game, –∞ —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –ø–æ–º–æ—â—å –∏—Å–ø–æ–ª—å–∑—É–π –∫–æ–º–∞–Ω–¥—É /help"
        markup = InlineKeyboardMarkup()
        markup.add(InlineKeyboardButton(text="–°—Å—ã–ª–∫–∞ –Ω–∞ –∏—Å—Ö–æ–¥–Ω—ã–π –∫–æ–¥ –±–æ—Ç–∞", url="https://github.com/ysatyn/The_gallows"))  # –°–°–´–õ–ö–ê –ù–ê –ò–°–•–û–î–ù–ò–ö

        await bot.send_photo(user_id, preview, text, reply_markup=markup)


@bot.message_handler(commands=["game"])
async def game(message):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /game
    –ù–∞—á–∏–Ω–∞–µ—Ç –Ω–æ–≤—É—é –∏–≥—Ä—É
    :param message: –°–æ–æ–±—â–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –Ω–∞–ø–∏—Å–∞–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    """

    user_id = message.from_user.id
    if message.chat.type != "private":  # –±–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –≤ –ø—Ä–∏–≤–∞—Ç–Ω—ã—Ö —á–∞—Ç–∞—Ö
        return
    c.execute(f"SELECT user_id FROM user_words WHERE user_id = {user_id}")
    result = c.fetchone()
    if result is not None:  # –ø—Ä–æ–≤–µ—Ä—è–µ–º, —É–≥–∞–¥—ã–≤–∞–µ—Ç –ª–∏ —Å–µ–π—á–∞—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–ª–æ–≤–æ –∏–ª–∏ –Ω–µ—Ç
        await bot.send_message(user_id, "–í—ã —É–∂–µ —É–≥–∞–¥—ã–≤–∞–µ—Ç–µ —Å–ª–æ–≤–æ!")
        return
    with open("words.json", "r", encoding="utf-8") as f:  # –∑–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–∞ —Å —Å–ª–æ–≤–∞–º–∏
        words = json.load(f)
    word = random.choice(words)  # –≤—ã–±–∏—Ä–∞–µ–º —Å–ª—É—á–∞–π–Ω–æ–µ —Å–ª–æ–≤–æ –∏–∑ —Ñ–∞–π–ª–∞
    empty_symbols = ""
    for i in range(len(word)):  # —Å–æ–∑–¥–∞—ë–º –ø—É—Å—Ç–æ–µ —Å–ª–æ–≤–æ
        empty_symbols += "_ "
    text = f"–í–∞–º –≤—ã–ø–∞–ª–æ —Å–ª–æ–≤–æ –∏–∑ {len(word)} –±—É–∫–≤. –í—Ä–µ–º—è —É–≥–∞–¥—ã–≤–∞—Ç—å!\n{empty_symbols}"
    c.execute(
        f"""INSERT INTO user_words (user_id, current_word, attempts) VALUES (?, ?, ?)""",
        (user_id, word, 0),
    )  # –æ–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ —Ç–∞–±–ª–∏—Ü–µ
    conn.commit()
    await bot.send_message(message.chat.id, text)


@bot.message_handler(commands=["stop"])
async def stop(message):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /stop
    –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Ç–µ–∫—É—â—É—é –∏–≥—Ä—É –∏ —É–¥–∞–ª—è–µ—Ç –¥–∞–Ω–Ω—ã–µ –æ–± —É–≥–∞–¥—ã–≤–∞–µ–º–æ–º —Å–ª–æ–≤–µ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    :param message: –°–æ–æ–±—â–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –Ω–∞–ø–∏—Å–∞–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    """

    user_id = message.from_user.id
    if message.chat.type != "private":  # –±–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –≤ –ª–∏—á–Ω–æ–º —á–∞—Ç–µ
        return
    c.execute(f"SELECT current_word FROM user_words WHERE user_id = {user_id}")
    result = c.fetchone()
    if result is None:  # –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ —É–≥–∞–¥—ã–≤–∞–ª —Å–ª–æ–≤–æ
        await bot.send_message(user_id, "–í—ã –Ω–µ —É–≥–∞–¥—ã–≤–∞–ª–∏ —Å–ª–æ–≤–æ!")
        return
    word = result[0]
    c.execute(f"DELETE FROM user_words WHERE user_id = {user_id}")  # —É–¥–∞–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –æ —Å–ª–æ–≤–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    conn.commit()
    await bot.send_message(user_id, f"–ò–≥—Ä–∞ –±—ã–ª–∞ –ø—Ä–µ—Ä–≤–∞–Ω–∞. –í–∞—à–µ —Å–ª–æ–≤–æ –±—ã–ª–æ: {word}")


@bot.message_handler(commands=["help"])
async def help_command(message):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help
    –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–æ—Ç–µ –∏ –µ–≥–æ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è—Ö
    :param message: –°–æ–æ–±—â–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –Ω–∞–ø–∏—Å–∞–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    """

    user_id = message.from_user.id
    help_text = """
    –ü—Ä–∏–≤–µ—Ç! –Ø –ø–æ–º–æ–≥—É —Ç–µ–±–µ —Å –∏–≥—Ä–æ–π "–í–∏—Å–µ–ª–∏—Ü–∞".

    –ö–æ–º–∞–Ω–¥—ã:
    /start - –Ω–∞—á–∞—Ç—å –Ω–æ–≤—É—é –∏–≥—Ä—É
    /game - –Ω–∞—á–∞—Ç—å –Ω–æ–≤—É—é –∏–≥—Ä—É
    /guess - —É–≥–∞–¥–∞—Ç—å —Å–ª–æ–≤–æ —Ü–µ–ª–∏–∫–æ–º
    /stop - –ø—Ä–µ—Ä–≤–∞—Ç—å —Ç–µ–∫—É—â—É—é –∏–≥—Ä—É
    /make_link - —Å–æ–∑–¥–∞—Ç—å —Å—Å—ã–ª–∫—É –Ω–∞ —Å–≤–æ—ë —Å–ª–æ–≤–æ
    /help - –ø–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ

    –ß—Ç–æ–±—ã —É–≥–∞–¥–∞—Ç—å –±—É–∫–≤—É, –ø—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å –º–Ω–µ –µ–µ –≤ –ª–∏—á–Ω–æ–º —á–∞—Ç–µ.
    """
    await bot.send_message(user_id, help_text)


@bot.message_handler(commands=["make_link"])
async def make_link(message):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /make_link
    –°–æ–∑–¥–∞–µ—Ç —Å—Å—ã–ª–∫—É –Ω–∞ —Å–≤–æ—ë —Å–ª–æ–≤–æ
    :param message: –°–æ–æ–±—â–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –Ω–∞–ø–∏—Å–∞–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    """

    if len(message.text.split(' ')) != 2:  # –ø—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –≤ —Ç–µ–∫—Å—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥–∞ –∏ —Ç–æ–ª—å–∫–æ –æ–¥–Ω–æ —Å–ª–æ–≤–æ
        await bot.send_message(message.chat.id, "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ /make_link {–≤–∞—à–µ —Å–ª–æ–≤–æ}.")
        return
    user_id = message.from_user.id
    word = message.text.split(" ")[1].lower()   # –ø–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ —Å–ª–æ–≤–æ
    if not is_real(word):  # –ø—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ç–∞–∫–æ–µ —Å–ª–æ–≤–æ
        await bot.send_message(user_id, "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ç–æ–ª—å–∫–æ —Ä–µ–∞–ª—å–Ω—ã–µ —Å–ª–æ–≤–∞")
        return
    c.execute(f"""SELECT link FROM unique_words WHERE word = ?""", (word,))
    link = c.fetchone()
    if link is not None:  # –µ—Å–ª–∏ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç —Å—Å—ã–ª–∫–∞ –Ω–∞ —Ç–∞–∫–æ–µ —Å–ª–æ–≤–æ
        link = create_link(link[0])
        await bot.send_message(user_id, f"–ü–æ–ø—Ä–æ–±—É–π —É–≥–∞–¥–∞—Ç—å —Å–ª–æ–≤–æ –∫–æ—Ç–æ—Ä–æ–µ —è –∑–∞–≥–∞–¥–∞–ª! "
                                        f"\n<a href='{link}'>–ü–µ—Ä–µ–π—Ç–∏ –∫ –±–æ—Ç—É</a>", parse_mode="HTML",
                               disable_web_page_preview=True)
        return
    letters = string.ascii_letters
    code = ''.join(random.choice(letters) for _ in range(20))  # –¥–µ–ª–∞–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∫–æ–¥ –¥–ª—è —Å–ª–æ–≤–∞
    link = create_link(code)  # –¥–µ–ª–∞–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ —ç—Ç–æ —Å–ª–æ–≤–æ
    c.execute(f"INSERT INTO unique_words (word, link) VALUES (?, ?)", (word, code))  # –¥–æ–±–∞–≤–ª—è–µ–º —Å–ª–æ–≤–æ –≤ –∫–∞—Ç–∞–ª–æ–≥
    conn.commit()
    await bot.send_message(user_id, f"–ü–æ–ø—Ä–æ–±—É–π —É–≥–∞–¥–∞—Ç—å —Å–ª–æ–≤–æ –∫–æ—Ç–æ—Ä–æ–µ —è –∑–∞–≥–∞–¥–∞–ª! "
                                    f"\n<a href='{link}'>–ü–µ—Ä–µ–π—Ç–∏ –∫ –±–æ—Ç—É</a>", parse_mode="HTML",
                           disable_web_page_preview=True)

@bot.message_handler(commands=["guess"])
async def guess_word(message):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /guess
    –ü–æ–∑–≤–æ–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —É–≥–∞–¥–∞—Ç—å —Å–ª–æ–≤–æ —Ü–µ–ª–∏–∫–æ–º
    :param message: –°–æ–æ–±—â–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –Ω–∞–ø–∏—Å–∞–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    """

    user_id = message.from_user.id
    c.execute(f"SELECT current_word FROM user_words WHERE user_id = {user_id}")
    result = c.fetchone()
    if result is None:  # –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ —É–≥–∞–¥—ã–≤–∞–ª —Å–ª–æ–≤–æ, —Ç–æ –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –µ–º—É –Ω–∞—á–∞—Ç—å –Ω–æ–≤—É—é –∏–≥—Ä—É
        await bot.send_message(user_id, "–í—ã –Ω–µ —É–≥–∞–¥—ã–≤–∞–ª–∏ —Å–ª–æ–≤–æ! –ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –∏–≥—Ä—É –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /game")
        return

    current_word = result[0]
    text = message.text

    if len(text.split(" ")) != 2:  # –ø—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–æ—Ä–º–∞—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
        await bot.send_message(user_id, "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ /guess {—Å–ª–æ–≤–æ}")
        return

    message_word = text.split(" ")[1]  # –ø–æ–ª—É—á–∞–µ–º —Å–ª–æ–≤–æ, –∫–æ—Ç–æ—Ä–æ–µ –ø—Ä–µ–¥–ª–æ–∂–∏–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏

    if message_word.lower() != current_word.lower():  # –µ—Å–ª–∏ —É–≥–∞–¥–∞–ª –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ
        c.execute(f"""SELECT attempts FROM user_words WHERE user_id = {user_id}""")  # –ø–æ–ª—É—á–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ø—ã—Ç–æ–∫
        attempts = c.fetchone()[0]
        attempts += 2  # —É–≤–µ–ª–∏—á–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ø—ã—Ç–æ–∫
        if attempts <= len(stages):  # –ø—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ —Å—Ç–∞–¥–∏—è –¥–ª—è —Ç–µ–∫—É—â–µ–π –ø–æ–ø—ã—Ç–∫–∏
            current_stage = stages[len(stages) - attempts - 1]
        else:  # –µ—Å–ª–∏ –Ω–µ—Ç, –±–µ—Ä—ë–º –ø–æ—Å–ª–µ–¥–Ω—é—é
            current_stage = stages[0]

        if attempts >= 8:  # –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∏—Å—á–µ—Ä–ø–∞–ª –≤—Å–µ –ø–æ–ø—ã—Ç–∫–∏
            await bot.send_message(user_id, f"–í—ã –∏—Å—á–µ—Ä–ø–∞–ª–∏ –≤—Å–µ –ø–æ–ø—ã—Ç–∫–∏. –ò–≥—Ä–∞ –æ–∫–æ–Ω—á–µ–Ω–∞. \n\n{current_stage}\n"
                                            f"–í–∞—à–µ —Å–ª–æ–≤–æ –±—ã–ª–æ: {current_word}")
            c.execute(f"DELETE FROM user_words WHERE user_id = {user_id}")  # —É–¥–∞–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ç–∞–±–ª–∏—Ü—ã
            conn.commit()
            return
        else:  # –µ—Å–ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –µ—â—ë –æ—Å—Ç–∞–ª–∏—Å—å –ø–æ–ø—ã—Ç–∫–∏
            c.execute(f"""SELECT wrong_letters, guessed_letters FROM user_words WHERE user_id = {user_id}""")  # –ø–æ–ª—É—á–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –∏ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –±—É–∫–≤—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            wrong_letters, guessed_letters = c.fetchone()

            new_word = ""
            for i in current_word: # —Å–æ—Å—Ç–∞–≤–ª—è–µ–º —Å–ª–æ–≤–æ –∏–∑ —É–≥–∞–¥–∞–Ω–Ω—ã—Ö –±—É–∫–≤
                if i in guessed_letters:
                    new_word += i + " "
                else:
                    new_word += "_ "
            list_of_wrong_letters = ""  # –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –±—É–∫–∫–≤—ã
            for i in wrong_letters:
                list_of_wrong_letters += i.upper() + ", "  # —Å—Ç—Ä–æ–∫–∞ —Å –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–∏–µ–º –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –±—É–∫–≤
            text = f"–°–ª–æ–≤–æ {message_word.lower()} –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç! \n {new_word}\n\n{current_stage}\n\n–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ —É–≥–∞–¥–∞–Ω–Ω—ã–µ –±—É–∫–≤—ã: {list_of_wrong_letters}"
            c.execute(
                f"UPDATE user_words SET attempts = ? WHERE user_id = ?",
                (attempts, user_id),
            )  # –æ–±–Ω–æ–≤–ª—è–µ–º –ø–æ–ø—ã—Ç–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Ç–∞–±–ª–∏—Ü–µ
            conn.commit()
            await bot.send_message(user_id, text)

    else:  # –µ—Å–¥–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–≥–∞–¥–∞–ª —Å–ª–æ–≤–æ
        c.execute(f"""DELETE FROM user_words WHERE user_id = {user_id}""")  # —É–¥–∞–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ç–∞–±–ª–∏—Ü—ã
        conn.commit()

        await bot.send_message(user_id, f"–í—ã —É–≥–∞–¥–∞–ª–∏ —Å–ª–æ–≤–æ! –í–∞—à–µ —Å–ª–æ–≤–æ: {current_word.lower()}")


@bot.message_handler(func=lambda message: message.chat.type == "private")
async def guess_letter(message):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –±–æ—Ç–∞ –¥–ª—è –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –±—É–∫–≤—É
    :param message: –°–æ–æ–±—â–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –Ω–∞–ø–∏—Å–∞–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    """

    letter = message.text.lower()
    if len(letter) > 1:  # –µ—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –±–æ–ª—å—à–µ —á–µ–º –∏–∑ –æ–¥–Ω–æ–π –±—É–∫–≤—ã
        return
    user_id = message.from_user.id
    if message.chat.type != "private":  # –±–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –≤ –ø—Ä–∏–≤–∞—Ç–Ω—ã—Ö —á–∞—Ç–∞—Ö
        return
    c.execute(f"SELECT current_word, wrong_letters, guessed_letters FROM user_words WHERE user_id = {user_id}")  # –ø–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–µ–µ —Å–ª–æ–≤–æ –∏ –±—É–∫–≤—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    result = c.fetchone()

    if result is None:  # –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ —É–≥–∞–¥—ã–≤–∞–ª —Å–ª–æ–≤–æ
        await bot.send_message(user_id, "–í—ã –Ω–µ —É–≥–∞–¥—ã–≤–∞–ª–∏ —Å–ª–æ–≤–æ! –ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –∏–≥—Ä—É –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /game")
        return
    word, wrong_letters, guessed_letters = result

    if letter not in RUSSIAN_LETTERS:  # –µ—Å–ª–∏ –±—É–∫–≤–∞ –Ω–µ –∏–∑ —Ä—É—Å—Å–∫–æ–≥–æ –∞–ª—Ñ–∞–≤–∏—Ç–∞
        await bot.send_message(user_id, "–≠—Ç–æ –Ω–µ –±—É–∫–≤–∞ —Ä—É—Å—Å–∫–æ–≥–æ –∞–ª—Ñ–∞–≤–∏—Ç–∞!")
        return

    if letter in guessed_letters or letter in wrong_letters:  # –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –ø—Ä–æ–±–æ–≤–∞–ª —ç—Ç—É –±—É–∫–≤—É
        await bot.send_message(user_id, "–í—ã —É–∂–µ –ø—Ä–æ–±–æ–≤–∞–ª–∏ —ç—Ç—É –±—É–∫–≤—É!")
        return

    if letter in word:  # –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–≥–∞–¥–∞–ª –±—É–∫–≤—É
        guessed_letters += letter  # –ø—Ä–∏–±–∞–≤–ª—è–µ–º –±—É–∫–≤—É –∫ —Å–ø–∏—Å–∫—É —É–≥–∞–¥–∞–Ω–Ω—ã—Ö

        new_word = ""
        count = 0
        for i in word:  # —Å–æ—Å—Ç–∞–≤–ª—è–µ–º —Å–ª–æ–≤–æ
            if i in guessed_letters:
                new_word += i + " "
                count += 1
            else:
                new_word += "_ "
        c.execute(f"""SELECT attempts FROM user_words WHERE user_id = {user_id}""")
        attempts = int(c.fetchone()[0])

        current_stage = stages[len(stages) - attempts - 1]  # –ø–æ–ª—É—á–∞–µ–º —Å—Ç–∞–¥–∏—é –¥–ª—è —Ç–µ–∫—É—â–µ–π –ø–æ–ø—ã—Ç–∫–∏

        list_of_wrong_letters = ""
        for i in wrong_letters:
            list_of_wrong_letters += i.upper() + ", "  # —Å–æ—Å—Ç–∞–≤–ª—è–µ–º —Å—Ç—Ä–æ–∫—É —Å –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω—ã–º–∏ –±—É–∫–≤–∞–º–∏

        text = f"–í—ã —É–≥–∞–¥–∞–ª–∏ –±—É–∫–≤—É {letter}! \n {new_word}\n\n{current_stage}\n\n–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ —É–≥–∞–¥–∞–Ω–Ω—ã–µ –±—É–∫–≤—ã: {list_of_wrong_letters}"

        c.execute(
            f"UPDATE user_words SET guessed_letters = ? WHERE user_id = ?",
            (guessed_letters, user_id),
        )  # –æ–±–Ω–æ–≤–ª—è–µ–º —É–≥–∞–¥–∞–Ω–Ω—ã–µ –±—É–∫–≤—ã
        conn.commit()

        if count == len(word):  # –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–ª–Ω–æ—Å—Ç—å—é —Å–æ—Å—Ç–∞–≤–∏–ª —Å–ª–æ–≤–æ
            await bot.send_message(user_id, f"–í—ã —É–≥–∞–¥–∞–ª–∏ —Å–ª–æ–≤–æ! –≠—Ç–æ –±—ã–ª–æ: {word}")
            c.execute(f"DELETE FROM user_words WHERE user_id = {user_id}")  # —É–¥–∞–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ç–∞–±–ª–∏—Ü—ã
            conn.commit()
        else:
            await bot.send_message(user_id, text)
    else:  # –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ —É–≥–∞–¥–∞–ª –±—É–∫–≤—É

        c.execute(f"""SELECT attempts FROM user_words WHERE user_id = {user_id}""")  # –ø–æ–ª—É—á–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ø—ã—Ç–æ–∫
        attempts = int(c.fetchone()[0])
        attempts += 1  # —É–≤–µ–ª–∏—á–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ø—ã—Ç–æ–∫
        wrong_letters += letter  # –¥–æ–±–∞–≤–ª—è–µ–º –Ω–µ—É–≥–∞–¥–∞–Ω–Ω—É—é –±—É–∫–≤—É –∫ —Å–ø–∏—Å–∫—É –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –±—É–∫–≤

        if attempts <= len(stages):  # –ø—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ —Å—Ç–∞–¥–∏—è –¥–ª—è —Ç–µ–∫—É—â–µ–π –ø–æ–ø—ã—Ç–∫–∏
            current_stage = stages[len(stages) - attempts - 1]
        else:  # –µ—Å–ª–∏ –Ω–µ—Ç, –±–µ—Ä—ë–º –ø–æ—Å–ª–µ–¥–Ω—é—é
            current_stage = stages[0]

        new_word = ""
        for i in word:  # —Å–æ—Å—Ç–∞–≤–ª—è–µ–º —Å–ª–æ–≤–æ –∏–∑ —É–≥–∞–¥–∞–Ω–Ω—ã—Ö –±—É–∫–≤
            if i in guessed_letters:
                new_word += i + " "
            else:
                new_word += "_ "

        list_of_wrong_letters = ""
        for i in wrong_letters:
            list_of_wrong_letters += i.upper() + ", "  # —Å—Ç—Ä–æ–∫–∞ —Å –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–∏–µ–º –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –±—É–∫–≤

        text = f"–ë—É–∫–≤—ã {letter} –Ω–µ—Ç –≤ –Ω–∞—à–µ–º —Å–ª–æ–≤–µ.\n {new_word}\n\n{current_stage}\n\n–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ —É–≥–∞–¥–∞–Ω–Ω—ã–µ –±—É–∫–≤—ã: {list_of_wrong_letters}"
        c.execute(
            f"UPDATE user_words SET wrong_letters = ?, attempts = ? WHERE user_id = ?",
            (wrong_letters, attempts, user_id),
        )  # –æ–±–Ω–æ–≤–ª—è–µ–º –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –±—É–∫–≤—ã –∏ –ø–æ–ø—ã—Ç–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Ç–∞–±–ª–∏—Ü–µ
        conn.commit()

        if attempts >= 8:  # –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∏—Å—á–µ—Ä–ø–∞–ª –≤—Å–µ –ø–æ–ø—ã—Ç–∫–∏

            await bot.send_message(user_id, f"–í—ã –∏—Å—á–µ—Ä–ø–∞–ª–∏ –≤—Å–µ –ø–æ–ø—ã—Ç–∫–∏. –ò–≥—Ä–∞ –æ–∫–æ–Ω—á–µ–Ω–∞. \n\n{current_stage}\n"
                                                f"–í–∞—à–µ —Å–ª–æ–≤–æ –±—ã–ª–æ: {word}")
            c.execute(f"DELETE FROM user_words WHERE user_id = {user_id}")  # —É–¥–∞–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ç–∞–±–ª–∏—Ü—ã
            conn.commit()

        else: # –µ—Å–ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –µ—â—ë –æ—Å—Ç–∞–ª–∏—Å—å –ø–æ–ø—ã—Ç–∫–∏

            await bot.send_message(user_id, text)


async def main():
    logger.info("–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞...")
    commands = [
        BotCommand("game", "–ù–∞—á–∞—Ç—å –Ω–æ–≤—É—é –∏–≥—Ä—É"),
        BotCommand("guess", "–£–≥–∞–¥–∞—Ç—å —Å–ª–æ–≤–æ —Å—Ä–∞–∑—É"),
        BotCommand("stop", "–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ç–µ–∫—É—â—É—é –∏–≥—Ä—É"),
        BotCommand("make_link", "–°–æ–∑–¥–∞—Ç—å —Å–≤–æ—ë —Å–ª–æ–≤–æ"),
        BotCommand("help", "–ü–æ–ª—É—á–∏—Ç—å –ø–æ–º–æ—â—å")
    ]
    await bot.set_my_commands(commands)
    logger.info("–ö–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")

    try:
        logger.info("–ë–æ—Ç –Ω–∞—á–∏–Ω–∞–µ—Ç —Ä–∞–±–æ—Ç—É")
        await bot.polling(non_stop=True)
    except Exception as Exc:
        logger.error(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ –±–æ—Ç–∞: {Exc}")
    finally:
        logger.info("–ë–æ—Ç –∑–∞–≤–µ—Ä—à–∏–ª —Ä–∞–±–æ—Ç—É")


if __name__ == "__main__":
    asyncio.run(main())